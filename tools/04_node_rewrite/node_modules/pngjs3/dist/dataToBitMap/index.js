'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function (data, bitmapInfo) {
  var width = bitmapInfo.width,
      height = bitmapInfo.height,
      depth = bitmapInfo.depth,
      bpp = bitmapInfo.bpp,
      interlace = bitmapInfo.interlace;


  if (depth !== 8) {
    var bits = (0, _bitRetriever2.default)(data, depth);
  }
  var pxData;
  if (depth <= 8) {
    pxData = new Buffer(width * height * 4);
  } else {
    pxData = new Uint16Array(width * height * 4);
  }
  var rawPos = 0;
  var images = void 0;
  var getPxPos = void 0;

  if (interlace) {
    images = _interlace2.default.getImagePasses(width, height);
    getPxPos = _interlace2.default.getInterlaceIterator(width, height);
  } else {
    var nonInterlacedPxPos = 0;
    getPxPos = function getPxPos() {
      var returner = nonInterlacedPxPos;
      nonInterlacedPxPos += 4;
      return returner;
    };
    images = [{ width: width, height: height }];
  }

  for (var imageIndex = 0; imageIndex < images.length; imageIndex++) {
    if (depth === 8) {
      rawPos = (0, _mapImage8Bit2.default)({
        image: images[imageIndex],
        pxData: pxData, getPxPos: getPxPos, bpp: bpp, data: data, rawPos: rawPos
      });
    } else {
      var maxBit = Math.pow(2, depth) - 1;
      rawPos = (0, _mapImageCustomBit2.default)({
        image: images[imageIndex],
        pxData: pxData, getPxPos: getPxPos, bpp: bpp, bits: bits, maxBit: maxBit
      });
    }
  }
  if (depth === 8) {
    if (rawPos !== data.length) {
      throw new Error('extra data found');
    }
  } else {
    bits.end();
  }

  return pxData;
};

var _interlace = require('../interlace');

var _interlace2 = _interopRequireDefault(_interlace);

var _mapImage8Bit = require('./mapImage8Bit');

var _mapImage8Bit2 = _interopRequireDefault(_mapImage8Bit);

var _mapImageCustomBit = require('./mapImageCustomBit');

var _mapImageCustomBit2 = _interopRequireDefault(_mapImageCustomBit);

var _bitRetriever = require('./bitRetriever');

var _bitRetriever2 = _interopRequireDefault(_bitRetriever);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }